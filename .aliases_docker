#!/usr/bin/env bash

alias d="docker"

# list docker images
alias dls="docker image ls --format='table {{.ID}}\t{{.Repository}}\t{{.Tag}}'"

# delete docker image
alias dirm="docker image rm"

# go into container
dbash() {
    docker exec -it $@ bash || if [ $? -eq 126 ]; then docker exec -it $@ sh; fi
}

# find container by parts of name
dps() {
    local args
    local filter
    local arg
    for arg in $@; do
        if [[ "$arg" =~ ^-.+ ]]; then
            args+="$arg "
        else
            filter+="${arg}.*"
        fi
    done
    args=$(echo $args | xargs)
    if [ -z "$filter" ]; then
        docker ps $args --format="table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Image}}"
    else
        docker ps $args -q --filter "name=$filter"
    fi
}

# find container by id or parts of name
dcheck() {
    if [ $# -eq 0 ]; then
        echo "No args" && return 1
    else
        container=$(dps -a $@)
        if [ -z $container ]; then
            container=$(docker ps -aq --filter "id=$@")
        fi
        if [ -z $container ]; then
            echo "No such container" && return 1
        elif [ $(echo $container | wc -l) -gt 1 ]; then
            echo "Ambigious query" && return 1
        fi
    fi
}

# go into container
dgo() {
    local container
    dcheck $@ && dbash $container
}

# stop and delete container
drm() {
    local container
    dcheck $@ && docker stop $container && docker rm $container
}

# go into mysql
dmysql() {
    docker exec -it $(dps mysql) mysql -u root -p"$(docker exec $(dps mysql) printenv MYSQL_ROOT_PASSWORD)" $@
}

# go into redis
dredis() {
    local db=$(dmysql -NB -e "SHOW DATABASES LIKE 'dci_%';" | grep -v 'Warning' | tr -d '\r')
    local -a redis_params
    redis_params=($(dmysql -NB $db -e "SELECT JSON_UNQUOTE(params_redis->'$.password'), params_redis->'$.port' FROM dci_location;" | grep -v 'Warning'))
    local redis_password=$(echo ${redis_params[1]})
    local redis_port=$(echo ${redis_params[2]})
    docker exec -it $(dps redis) redis-cli -p $redis_port -a $redis_password $@
}
