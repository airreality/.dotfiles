# dirs
alias b="cd ~/BashProjects/"
alias p="cd ~/PythonProjects/"

# scripts
alias prename="bash ~/BashProjects/rename_photoes.sh"
alias hi="python ~/PythonProjects/QATS/qats.py hello"
alias wtime="python ~/PythonProjects/WORKTIME/time.py"
alias lenses="python ~/PythonProjects/lenses/lenses.py"

# system
alias diff="colordiff"
alias opti="optirun -c :8"
alias space="xfconf-query -c xfwm4 -p /general/workspace_count -s"
alias weather="curl wttr.in"
alias dl="youtube-dl"
alias dl-mp3="youtube-dl --extract-audio --audio-format mp3 --audio-quality 0"

function venv {
    source venv/bin/activate > /dev/null 2>&1 ||
        source env/bin/activate > /dev/null 2>&1 ||
        (echo "No env. Create?"
        read create
        if [[ "$create" == "y" ]]; then
            python3 -m virtualenv venv
        fi)
}

function cheat {
    curl cheat.sh/$1
}

# colours
alias ls="ls --color=auto"
alias grep="grep --colour=auto"
alias egrep="egrep --colour=auto"
alias fgrep="fgrep --colour=auto"

### docker

# list docker images
alias dls="docker image ls --format='{{.ID}}\t{{.Repository}}'"

# go into container
function dbash {
    docker exec -it $@ bash || docker exec -it $@ sh
}

# find container by parts of name
function dps {
    if [ $# -eq 0 ]; then
        docker ps --format='{{.ID}}\t{{.Names}}'
    else
        args=""
        filter=""
        for arg in $@; do
            if [ "$(echo $arg | cut -c 1)" = "-" ]; then
                args="${args}${arg} "
            else
                filter="${filter}${arg}.*"
            fi
        done
        args=$(echo $args | xargs)
        if [ -z "$filter" ]; then
            docker ps ${args} --format="{{.ID}}\t{{.Names}}"
        else
            docker ps ${args} -q --filter "name=${filter}"
        fi
    fi
}

# go into container by id or parts of name
function dgo {
    if [ $# -eq 0 ]; then
        echo "No args"
    else
        container=$(dps $@)
        if [ -z $container ]; then
            container=$(docker ps --filter "id=$@" --format="{{.ID}}")
        fi
        if [ -z $container ]; then
            echo "No such container"
        elif [ $(echo $container | wc -l) -gt 1 ]; then
            echo "Ambigious query"
        else
            dbash $container
        fi
    fi
}

# stop and delete all containers
function drm {
    if [ $(docker ps | wc -l) -ge 2 ]; then
        docker kill $(docker ps --format={{.ID}})
    fi
    if [ $(docker ps -a | wc -l) -ge 2 ]; then
        docker rm $(docker ps -a --format={{.ID}})
    fi
}

# delete all images
function dirm {
    if [ $(docker image ls | wc -l) -ge 2 ]; then
        docker image rm  $(docker image ls --format={{.ID}})
    fi
}
